<template>
  <div class="UiHolder">
    <div id="dev" class="c-p-h medium">
      &nbsp;
    </div>
    <div id="counter" class="c-p-h xlarge">
      <span id="counter-fill">&nbsp;</span>
      <span class="counter-switch">â–¼</span>
    </div>
  </div>
</template>

<script>
// Viewport
var viewportWidth
var viewportHeight
var viewportDim

export default {
  methods: {
    checkViewport () {
      if (viewportWidth < 667) {
        viewportDevice = 'mobile'
      } else if (viewportWidth < 1024 && viewportWidth > 666) {
        viewportDevice = 'tablet'
      } else {
        viewportDevice = 'desktop'
      }
      document.querySelector('body').classList.remove('viewport-device-desktop', 'viewport-device-tablet', 'viewport-device-mobile')
      document.querySelector('body').classList.add('viewport-device-' + viewportDevice)
      if (viewportDim > 2) {
        document.querySelector('body').classList.remove('viewport-dim-square', 'viewport-dim-landscape')
        document.querySelector('body').classList.add('viewport-dim-landscape')
      } else {
        document.querySelector('body').classList.remove('viewport-dim-square', 'viewport-dim-landscape')
        document.querySelector('body').classList.add('viewport-dim-square')
      }
    },
    resizeLogic () {
      viewportWidth = window.innerWidth
      viewportHeight = window.innerHeight
      viewportDim = viewportWidth / viewportHeight
      this.checkViewport()
    },
    setbodyColor ($color) {
      document.documentElement.style.background = $color
      document.querySelector('body').style.background = $color
    },
    hideBlock () {
      var block = document.getElementById('block')
      if (block) {
        block.classList.add('hide-block')
      }
    },
    mouseOver () {
      var theMenu = document.getElementById('MainMenu')
      theMenu.classList.add('show-me')
    },
    mouseOut () {
      var theMenu = document.getElementById('MainMenu')
      theMenu.classList.remove('show-me')
    },
    doOnOrientationChange () {
      if (device === 'mobile' || device === 'tablet') {
        switch (window.orientation) {
          case -90:
          case 90:
            eoDeviceOrientation = 'landscape'
            // resize()
            break
          default:
            eoDeviceOrientation = 'portrait'
            // resize()
            break
        }
      }
      console.log(eoDeviceOrientation)
    },
    handleScroll () {
      var bodyscrollpos = window.pageYOffset || document.documentElement.scrollTop
      var body = document.body
      var html = document.documentElement
      var docheight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight)
      var viewportHeight = window.innerHeight
      var bodyscrolldir = 'down'
      var header = document.getElementById('header')
      // var headerHeight = header.clientHeight
      if (bodyscrollpos < 0) {
        bodyscrollpos = 0
      } else if ((bodyscrollpos + viewportHeight) > docheight) {
        bodyscrollpos = docheight - viewportHeight
      }
      if (bodyoldscrollpos > bodyscrollpos) {
        bodyscrolldir = 'up'
      } else {
        bodyscrolldir = 'down'
      }
      var coverState = document.getElementById('cover-module')
      var headerBreakpoint

      if (coverState) {
        headerBreakpoint = viewportHeight * 1.75
      } else {
        headerBreakpoint = 1
      }

      if (bodyscrolldir === 'down' && bodyscrollpos > headerBreakpoint) {
        header.classList.add('headerHide')
      } else {
        header.classList.remove('headerHide')
      }
      bodyoldscrollpos = bodyscrollpos
      console.log(bodyscrollpos)
      console.log(bodyoldscrollpos)
      console.log(docheight)
      console.log(bodyscrolldir)

      moduleIndex = Math.ceil(bodyscrollpos / viewportHeight)
      if (moduleIndex < 1) {
        moduleIndex = 1
      }
      if (moduleIndex !== moduleIndexOld) {
        document.getElementById('dev').innerHTML = moduleIndex
        moduleIndexOld = moduleIndex
      }
    }
  },
  mounted: function () {
    this.resizeLogic()
    var ttt = this
    setTimeout(function () {
      ttt.hideBlock()
      ttt.setbodyColor(ttt.$store.state.pagebgcolor)
      // history.pushState(null, null, '/en/step2')
    }, 200)
    // SCROLL
    window.addEventListener('scroll', this.handleScroll)
    // And trigger on mounted
    this.handleScroll
    // RESIZE
    window.addEventListener('resize', this.resizeLogic)
    // ORIENTATION CHANGE
    window.addEventListener('orientationchange', this.doOnOrientationChange)
    this.doOnOrientationChange()

    var theLink = document.getElementById('MainMenu')
    theLink.addEventListener('mouseover', this.mouseOver)
    theLink.addEventListener('mouseout', this.mouseOut)
  },
  beforeDestroy () {
    // Remove Scroll Listener
    window.removeEventListener('scroll', this.handleScroll)
    var theLink = document.getElementById('MainMenu')
    theLink.removeEventListener('mouseover', this.mouseOver)
    theLink.removeEventListener('mouseout', this.mouseOut)
  },
  destroyed: function () {
    // Test
  }
}
</script>

<style lang="scss">
@import '~assets/css/functions.scss';
@import '~assets/css/vars.scss';
  .UiHolder {
    #dev {
      position: fixed;
      z-index: 999;
      left: 1vw;
      top: 97.5%;
      color: #ccc;
      -ms-transform:rotate(-90deg);
      -moz-transform:rotate(-90deg);
      -webkit-transform:rotate(-90deg);
      -o-transform:rotate(-90deg);
      transform-origin: top left;
      display: none;
    }
  }
</style>
